buildscript {
    ext { // build.gradle에서 사용할 전역 변수 설정
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies { // spring-boot-gradle-plugin라는 스프링 부트 그레이들 플러그인의 2.1.7.RELEASE를 의존성으로 받겠다.
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
// 앞서 선언한 플러그인 의존성을 적용할 것인지
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.coatato.study.SpringnAWS'
version '1.0-SNAPSHOT'

repositories { // 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을 것인지
    mavenCentral() // 기본으로 많이 사용함
    jcenter() // 라이브러리 업로드 난이도 때문에 많이 사용함 (라이브러리 업로드를 간단하게 해줌)
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // 프로젝트 개발에 필요한 의존성들을 선언
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa') // 스프링 부트용 Spring Data JPA 추상화 라이브러리
    compile('com.h2database:h2') // 인메모리형 RDB
    compile("org.mariadb.jdbc:mariadb-java-client") // MariaDB 사용을 위함
    compile('org.springframework.boot:spring-boot-starter-oauth2-client') // 소셜 로그인 등 소셜 기능 구현 시 필요한 의존성
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.session:spring-session-jdbc')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testImplementation 'org.hamcrest:hamcrest:2.2'
}